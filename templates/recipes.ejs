<html>
    <head>
        <title>Your Recipes</title>
        <script>
            class Ingredient{
              constructor(amount, unit, name){
                this.amount=amount;
                this.unit=unit;
                this.name=name;
              }
              Combine(){
                let combined="";
                for(let property in this){
                    if(combined.length>0)
                      combined+=",";
                    combined+=this[property];
                }
                return combined;
              }
              static CombineArray(ingredients){
                 let combined="";
                 if(ingredients.length>0){
                    combined=ingredients[0].Combine();
                    console.log("size"+ingredients.length);
                    for(let position=1; position<ingredients.length; position++){
                        combined+=";"+ingredients[position].Combine();
                    }
                 }
                 return combined;
              }
              toString(){
                //No "s" at the end if there is exactly one
                if(this.amount==1)
                 return `${this.amount} ${this.unit} of ${this.name}`;
                else
                 return `${this.amount} ${this.unit}s of ${this.name}`;
             }
          }
        let ingredients=[];
        function RemoveIngredient(current){
            current.parentElement.parentElement.removeChild(current.parentElement);
        }
        function CreateDeleteButton(){
            const deleteButton=document.createElement("button");
            deleteButton.textContent="Delete";
            deleteButton.style.backgroundColor="red";
            deleteButton.addEventListener("click", function(){
              RemoveIngredient(deleteButton);
            });
            return deleteButton;
        }
       
     
     function AddIngredient(){
    
        const ingredient=document.getElementById("ingredient-info");
        const explanation=document.createElement("h3");
        explanation.textContent="Enter Ingredient and Proportions Below";
        ingredient.appendChild(explanation);
        ingredient.style.display="block";
         const UNITS=["Cup", "Tablespoon", "Teaspoon"];
         const amount=document.createElement("input");
         amount.id="Amount";
         amount.setAttribute("type", "number");
         amount.setAttribute("placeholder", "Amount");
         amount.setAttribute("required", true);
         amount.setAttribute("min", 0);
         const unitSelection=document.createElement("select");
         unitSelection.id="units";
         
         for(let current of UNITS){
            const unitOption=document.createElement("option");
            unitOption.textContent=current;
            unitOption.value=current;
            unitSelection.appendChild(unitOption);
        }
         const name=document.createElement("input");
          name.setAttribute("placeholder", "Ingredient");
          name.id="name";
          name.setAttribute("required", true);
            ingredient.appendChild(amount);
            ingredient.appendChild(unitSelection);
            ingredient.appendChild(name);
            amount.value="0";
            amount.id="amount";
            ingredient.innerHTML+="<br>";
            const ok=document.createElement("button");
            ok.textContent="Ok";
            ingredient.appendChild(ok);
            const addIngredient=document.getElementById("add-ingredient");
            function Close(){
                
                ingredient.innerHTML="";
                ingredient.style.display="none";
                addIngredient.disabled=false;
            }
            ok.addEventListener("click", function(){
                const newIngredient=new Ingredient(document.getElementById("amount").value, document.getElementById("units").value, document.getElementById("name").value);
                
                if(document.getElementById("name").value.length>0){
            
                    ingredients.push(newIngredient);
                    
                    
                    const description=document.createElement("li");
                    const deleteButton=CreateDeleteButton(description);
                    description.textContent=newIngredient.toString();
                    description.appendChild(deleteButton);
                    const recipe=document.getElementById("recipe");
                    recipe.appendChild(description);
                    Close();
                }
                else{
                    alert("You must enter the amount as well as the ingredient.");
                }
                        
            });
            const cancel=document.createElement("button");
            cancel.textContent="Cancel";
            cancel.addEventListener("click", function(){Close()});
            ingredient.appendChild(cancel);
            
            //So only one box will exist at most
            addIngredient.disabled=true;
        }

        </script>
        <script>
           function NewRecipe(){
              ingredients=[];
              document.getElementById("recipe").innerHTML="";
              if(sessionStorage.getItem("recipe name")!==null){
                 sessionStorage.removeItem("recipe name");
                 ShowRecipeName();
              }
           }
           function DisplayRecipe(recipe){
             //Resets
              recipe.innerHTML="";
              for(let position=0; position<ingredients.length; position++){
                recipe.innerHTML+="<li></li>";
                recipe.children[position].textContent=ingredients[position].toString()+recipe.children[position].textContent;
              }
              for(let position=0; position<recipe.children.length; position++){
                recipe.children[position].innerHTML+="<button style='background-color:red;'' onclick='RemoveIngredient(this)'>Delete</button>";
              }
            
            }
           
            //Works with the database
           function GetIngredients(ingredientList){
            alert(ingredientList)
               const recipe=JSON.parse(ingredientList);
               ingredients=[];//Resets
               for(let ingredient of recipe){
                 ingredients.push(new Ingredient(ingredient.amount, ingredient.unit, ingredient.name));
               }
           }
           async function Open(){
              const recipeName=await prompt("Put in the name of the recipe you want to open?");
              const recipe=document.getElementById("recipe");
              const opening=new XMLHttpRequest();
              
              opening.open("POST", `/open?username=${sessionStorage.getItem("username")}&recipe=${recipeName}`, true);
              opening.setRequestHeader("Content-Type", "text/json");
              opening.onreadystatechange=function(){
                  
                  if(opening.readyState==4){
                    if(opening.status==200||opening.status==201){
                        GetIngredients(opening.responseText);
                       DisplayRecipe(recipe);
                       sessionStorage.setItem("recipe name", recipeName);
                       
                    }
                       
                    else
                      alert("Unable to access recipe. Please make sure it exists.");
                  }
              }
              opening.send();    
               
           }
           async function Write(recipeName){
                const recipe=document.getElementById("recipe").textContent;
                const writer=new XMLHttpRequest();
                writer.open("POST", `/saveAs?username=${sessionStorage.getItem("username")}&recipeName=${recipeName}&recipe=${Ingredient.CombineArray(ingredients)}`, true);
                writer.setRequestHeader("Content-Type", "text/json");
                writer.onreadystatechange=function(){
                    if(save.readyState==4){
                        if(save.status==200||save.status==201){
                            alert("Save successful");
                        }
                        else
                          alert("Unable to save recipe");
                    }
                }
                writer.send();
           }
           async function SaveAs(){
                const recipeName=await prompt("Put in the name you want to give the recipe?");
                Write(recipeName);
                ShowRecipeName();
                sessionStorage.setItem("recipe name", recipeName);
           }
           async function Save(){
              if(sessionStorage.getItem("recipe name")===null){
                SaveAs();
              }
              else{
                 
                const recipe=Ingredient.CombineArray(ingredients);
                const save=new XMLHttpRequest();
                save.open("PUT", `/save/${sessionStorage.getItem("username")}/${sessionStorage.getItem("recipe name")}/${recipe}`);
                save.setRequestHeader("Content-Type", "text/json");
                save.onreadystatechange=function(){
                    if(save.readyState==4){
                        if(save.status==200||save.status==201)
                          alert("Successfully saved "+sessionStorage.getItem("recipe name"));
                    }
                    else{
                        alert("Unable to save "+sessionStorage.getItem("recipe name"));
                    }
                }
                 save.send();
              }
             
           }
          function ShowRecipeName(){
                const openedRecipe=document.getElementById("opened-recipe");
                if(sessionStorage.getItem("recipe name")!==null)
                  openedRecipe.textContent="Opened Recipe: "+sessionStorage.getItem("recipe name");
                else
                  openedRecipe.textContent="";

           }
          
           function DeleteRecipe(){
             const deletion=new XMLHttpRequest();
             deletion.open("DELETE", `/deleteRecipe?username=${sessionStorage.getItem("username")}&name=${sessionStorage.getItem("recipe name")}`, true);
             deletion.setRequestHeader("Content-Type", "text/json");
             
             deletion.onreadystatechange=function(){
                 
                if(deletion.readyState==4){
                    if(deletion.status==200||deletion.status==201){
                        alert("Successfully deleted "+sessionStorage.getItem("recipe name"));
                        NewRecipe();
                    }
                    else{
                         alert("Unable to delete "+sessionStorage.getItem("recipe name"));
                    }
                }
             }
             deletion.send();
           }
        </script>
        <script>
            function SayHello(){
                document.getElementById("hello").textContent="Hello "+sessionStorage.getItem("username");
            }
        </script>
        <style>
            #ingredient-info{
                background-color: lime;
                z-index: 3000;
                position:fixed;
                top:30px;
                right:20px;
                width:500px;
                height:100px;
                border:1px solid green;
                display:none;
            }
            #recipe{
                background-color:lightyellow;
                list-style-type:none;
                width:200px;
                
            }
            #recipe>li{
                border:1px solid black;
                padding-left:auto;
                padding-right:auto;
            }
            .menu-option{
                background-color:lightgreen;
                border:1px solid red;
            }
            #hello{
                text-align:right;
            }
        </style>
    </head>
    <body onload="ShowRecipeName(); SayHello();">
        <nav>
            <span class="menu-option" onclick="NewRecipe()">New</span>
            <span class="menu-option" onclick="Open()">Open</span>
            <span class="menu-option" onclick="Save()">Save</span>
            <span class="menu-option" onclick="SaveAs()">Save As</span>
            <span class="menu-option" onclick="DeleteRecipe()">Delete</span>
        </nav>
        <p>${ingredients}</p>
        <h1 id="hello"></h1>
        <h3 id="opened-recipe"></h3>
        <ul id="recipe">
             
        </ul>
        <button onclick="AddIngredient()" id="add-ingredient">Add Ingredient</button>
        <div id="ingredient-info">

        </div>
    </body>
</html>